<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_shield_bubble</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables.

    Shield_State  = "default"; // State of the shield. ("default" or "bounce")   
    BounceAnimate = 0;         // Whether or not the bounce should be animated.
    Parent        = 0;         // Checks who's the parent of this object.
    ShieldOffset  = 0;         // Y Offset.
    image_speed   = .3;        // How fast the animation plays.    


    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set the X/Y Position, Depth and sprite.

 // Position:
    x = floor(Parent.x);
    y = floor(Parent.y+ShieldOffset);  

 // Offset:
    if(Parent.Animation != "ROLL"){
       ShieldOffset = 0;
    }else{
       ShieldOffset = 4;
    }
      
 // Depth:   
    depth = Parent.depth - 1;
    
 // Sprite:
    if(Shield_State == "default"){
       sprite_index  = spr_shield_bubble;
       image_speed   = .3;
       BounceAnimate = false;
    }else{
       if(sprite_index != spr_shield_bubble){
          image_speed   = 0;
       }else{
          image_speed   = .3;
       }
    }
    
    if(BounceAnimate){
       if(image_index &lt; 6){
          image_index += 0.20;
       }else{
          if(sprite_index != spr_shield_bubble){
             image_index   = 0;
             sprite_index  = spr_shield_bubble;
          }
       }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw the shield.
    if(Parent.Invincibility &lt; 1.5){
       draw_sprite_ext(sprite_index, -1, floor(Parent.x), floor(Parent.y+ShieldOffset), 1, 1, Parent.AnimationAngle, c_white, Parent.Alpha);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
