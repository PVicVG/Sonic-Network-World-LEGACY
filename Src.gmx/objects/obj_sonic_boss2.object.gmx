<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_sonic_boss2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>obj_npc_sth3_firebreather</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables.

    Boss_HP          = 8;        // How many hits it takes until defeated.
    Boss_State       = 'Normal'; // State of the boss. 'Normal' &gt; 'Hit' &gt; 'Destroyed'
    Boss_InvTime     = 60;       // Invuln. Frames.
    Boss_DefTime     = 60;       // How long it takes until fully destroyed. (used to spawn explosions)
    Boss_FireTime    = 180;      // When to fire.
    Boss_Direction   = 1;       // Direction the boss is facing.
    Boss_Moving      = 0;        // Movement of the boss. (0 = Idle, 1 = Down, 2 = Up, 3 = Left, 4 = Right)
    Boss_AngRadius   = 0;        // Used to float.
    Boss_AngPosition = ystart; 
    image_speed      = 0.2; 
     ang_radius = 0;
     ang_radius_x = 0;
     display_damage = false;
 Boss_Harmful = false;
     
//instance_create(x,y,obj_sonic_eye)
        
/// Sprites

normal_sprite = spr_sonic_boss2;
hit_sprite = spr_sonic_boss2_hit;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Boss is hit.

    if(Boss_State == 'Hit' &amp;&amp; Boss_HP != 0){
       if(Boss_InvTime &gt; 0){
          Boss_InvTime --
          sprite_index = hit_sprite;
       }else{
          Boss_State   = 'Normal';
          Boss_InvTime = 60;
          sprite_index = normal_sprite;       
       }
    }else if(Boss_State == 'Hit' &amp;&amp; Boss_HP &lt; 1){
             Boss_State = 'Defeated';
    }
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Boss is defeated.
  
    if(Boss_State == 'Defeated'){
       if(Boss_DefTime != 0){
          if(Boss_DefTime mod 8 == 0){
             scr_create_dummy_effect(spr_boss_explosion, 0.2, x-random(50)+35, y-15+random(40), 1, -1);
             PlaySound(snd_object_destroy, global.SFXVolume, 1, 0);  
             if(instance_exists(obj_npc_sth3_firebreather_flame)){
                with(obj_npc_sth3_firebreather_flame){
                     instance_destroy();
                }
             }
         }         
         Boss_DefTime --
       }else{      
           
       // Create Broken Parts and reset camera.
          for(i=0; i&lt;4; i++){
              Part[i] = instance_create(x, y, obj_npc_sth3_firebreather_parts);
              Part[i] . image_xscale = Boss_Direction;
              Part[i] . image_index = i;
              Part[i] . Direction   = Boss_Direction;
          }

       // Reset Camera:
       /*   with(obj_camera){
               Cam_Subject    = instance_nearest(x, y, par_character);
               Cam_LeftLimit  = 0;
               Cam_RightLimit = room_width;
          }       
         */ 
       // Destroy:  
          instance_destroy();
          
       }       
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = Boss_Direction;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Left and Right
ang_radius_x +=1.5
x = xstart+lengthdir_x(9,ang_radius_x)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Up n Down
ang_radius +=3
y = ystart+lengthdir_y(24,ang_radius)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
