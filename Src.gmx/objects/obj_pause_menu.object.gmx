<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pause_menu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999998</depth>
  <persistent>0</persistent>
  <parentName>par_controller</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables.
   
gms_chat_toggle(true)

    image_speed = 0;
    _alpha      = 0;
    _x          = global.ScreenWidth;
    Option_ID   = 1;
    Finished    = 0;
    Restart     = 0;
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Restart the level.
    if(Restart == true){
       instance_create(0, 0, obj_fade_restart);
    }
    
   if global.chat = false{
   gms_chat_toggle(false)
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Slide to the center of the view and darken the background.
   
    if(Finished == false){
        _alpha += (0.5-_alpha)*0.05;
       _x      += (global.ScreenWidth/2-_x)*0.25;
    }else{
       _alpha += (0-_alpha)*0.10;
       _x     += (global.ScreenWidth+100-_x)*0.10; 
       if(_x &gt;= global.ScreenWidth+64){
          instance_destroy();
       }
    }
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change and select options.

 // Change Options:
    if(keyboard_check_pressed(global.Key_DOWN) &amp;&amp; Option_ID != 3){
       Option_ID++
       PlaySound(snd_object_switch, global.SFXVolume, 1, 1);
    }else if(keyboard_check_pressed(global.Key_DOWN) &amp;&amp; Option_ID == 3){
       Option_ID = 1;
       PlaySound(snd_object_switch, global.SFXVolume, 1, 1);       
    }
    if(keyboard_check_pressed(global.Key_UP) &amp;&amp; Option_ID != 1){
       Option_ID--
       PlaySound(snd_object_switch, global.SFXVolume, 1, 1);       
    }else if(keyboard_check_pressed(global.Key_UP) &amp;&amp; Option_ID == 1){
       Option_ID = 3;
       PlaySound(snd_object_switch, global.SFXVolume, 1, 1);       
    }    
    
 // Choose Options:
    if(keyboard_check_pressed(global.Key_ACTION)){
       if(Option_ID == 1){
          keyboard_key_press(global.Key_ENTER);
       }
       if(Option_ID == 2){
          if(instance_exists(par_fade) == false){
             keyboard_key_press(global.Key_ENTER);
             Restart = true;
          }
       }  
       if(Option_ID == 3){
          if(instance_exists(par_fade) == false){
             instance_create(0, 0, obj_fade_end);
          }
       }             
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Menu.

 // BG Alpha:
    draw_set_color(c_black);
    draw_set_alpha(_alpha);
    draw_rectangle(view_xview, view_yview, view_xview+view_wview, view_yview+view_hview, false);
    draw_set_alpha(1);
    draw_set_color(c_white);
    
 // Menu:
    draw_sprite(sprite_index, Option_ID-1, view_xview+floor(_x), view_yview+global.ScreenHeight/2)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
