<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_collision_platform_no_angle</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Int. Variables.
    RelativeX = x; // Relative X Position.
    RelativeY = y; // Relative Y Position.
    PreviousX = x; // Previous X Position.
    PreviousY = y; // Previous Y Position.
    HorSpd    = 0; // Horizontal Speed.
    VerSpd    = 0; // Vertical Speed.
    X_DCSpeed = 0; // Increases/Decreases the horizontal speed when changing directions.
    Y_DCSpeed = 0; // Increases/Decreases the vertical speed when changing directions.
    Activated = 0; // Is activated? Used to prevent deactivation.
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle the moving platform &amp; character position.

var i, PreviousX, PreviousY;
PreviousX = x;
PreviousY = y;

//Set Horizontal/Vertical Speed:
if(XSpd &lt; X_DCSpeed) {
   X_DCSpeed -= 0.025
}else if(XSpd &gt; X_DCSpeed) {
   X_DCSpeed += 0.025
} 
if(YSpd &lt; Y_DCSpeed) {
   Y_DCSpeed -= 0.025
} else if(YSpd &gt; Y_DCSpeed) {
   Y_DCSpeed += 0.025
}

HorSpd +=  X_DCSpeed;
VerSpd += -Y_DCSpeed;

// Activate:
Activated = true;

//Set the X/Y Position:
x = floor(RelativeX+HorSpd); 
y = floor(RelativeY-VerSpd); 
       
    // Change the X/Y Position of the Character standing on this platform:
       i = 0;
       repeat(instance_number(par_character)){
              CharMain = par_character;
              if(instance_exists(CharMain) == false){
                 i++
                 continue;
              }
              if(CharMain.Action != ActionDie){
                 if(CharMain.Ground == true &amp;&amp; CharMain.OnMoving = id){
                    CharMain.x += (x-PreviousX);
                    CharMain.y  = ((y-sprite_yoffset)-PlatformOffset);
                 }
              }
              i++
       }



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
