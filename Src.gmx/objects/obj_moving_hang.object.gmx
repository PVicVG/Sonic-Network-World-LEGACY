<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hang</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Init. Variables */
xspd = 0;
yspd = 0;
platform_offset = 10; //Default at 10. You might need to tweak this with every other platform that uses different sprites.

//Call Parent:
/* X and Y differences between current and last position. */
relative_x = x;        
relative_y = y;
previous_x = x;
previous_y = y;
x_speed    = 0; //The Horizontal Speed.
y_speed    = 0; //The Vertical Speed.       
x_dcspeed  = 0; //Increases/Decreases the horizontal speed when changing direction, aka Oscillating.
y_dcspeed  = 0; //Increases/Decreases the vertical speed  when changing direction, aka Oscillating.

triggered=false;
canbetriggered=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create Variables:
var i, previous_x, previous_y;
previous_x = x;
previous_y = y;

//Set Horizontal/Vertical Speed:
if(xspd &lt; x_dcspeed) {
   x_dcspeed -= 0.025
}else if(xspd &gt; x_dcspeed) {
   x_dcspeed += 0.025
} 
if(yspd &lt; y_dcspeed) {
   y_dcspeed -= 0.025
} else if(yspd &gt; y_dcspeed) {
   y_dcspeed += 0.025
}

x_speed +=  x_dcspeed;
y_speed += -y_dcspeed;

//Set the X/Y Position:
x = floor(relative_x+x_speed); 
y = floor(relative_y-y_speed); 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_place(x,y,obj_moving_platform_colllision_up)
{
yspd = -1; 
xspd = 0; 
}

if instance_place(x,y,obj_moving_platform_colllision_down)
{
yspd = 1; 
xspd = 0; 
}

if instance_place(x,y,obj_moving_platform_colllision_left)
{
yspd = 0; 
xspd = -1; 
}

if instance_place(x,y,obj_moving_platform_colllision_right)
{
yspd = 0; 
xspd = 1; 
}


scr_hang_step()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_hang_collision_player()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_heli_top,global.handle_object_timer div 120,floor(x),floor(y-38))
draw_sprite(sprite_index,image_index,floor(x),floor(y))


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
