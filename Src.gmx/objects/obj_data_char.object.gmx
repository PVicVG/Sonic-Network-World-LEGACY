<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_data_char</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-200</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Variables</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>option          = 0;            //are we choosing a Main character? or a CPU character? 0 = Main, 1 = CPU
slot            = 0;            //current save slot number/object
char_main       = 1;            //this selects the Main character 1 = Sonic, 2 = Tails, 3 = Knuckles
char_cpu        = 0;            //this selects the CPU character 0 = none, 1 = Sonic, 2 = Tails, 3 = Knuckles
arrow_index     = 0;            //used to draw the red arrows. this variable acts as an image_speed.
display_error   = false;        //show the error message if player tries to use the same Main and CPU character, (i.e. two Sonics).
allow_input     = false;        //whether or not input is active. this will sometimes temporarily disabled to prevent events from triggering twice
alarm[0]        = 1;            //timer to enable the input


audio_play_sound(snd_object_checkpoint,1,false);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Clear Error Message</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display_error = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Allow Keyboard/Gamepad Input</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>allow_input = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Toggle between  Main and CPU</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if allow_input
{
    
    //Confirm Main Character selection and move to CPU options
   if(keyboard_check_pressed(vk_enter) &amp;&amp; option != 1)
   {
      option = 1;           //move on to CPU selection
      allow_input = false;  //temporarily disable keyboard/gamepad input to prevent double-triggering 
      alarm[0] = 1;         //set the timer to enable input again
   }
    

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Confirm</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if allow_input 
{

      if(keyboard_check_pressed(vk_enter) &amp;&amp; option == 1)
      {
     //   if (char_main == char_cpu) //if Main and CPU character are the same, display error message
      //  {
      //  display_error = true;   //inform the Draw event to draw the error message
      //  alarm[1] = 100;          //set an alarm to turn off the message
      //  audio_play_sound(snd_sfx_error,1,false);
       // }
        
       // else //otherwise, start the new save slot (rest of the code in inside obj_data_slot User Defined 1)
        //{
        with slot 
            {
            char_main = char_menu.char_main      //make sure the save slot knows what character we selected
            char_cpu  = char_menu.char_cpu
            event_user(1);                      //make obj_data_slot create a new save file 
            } 
        instance_destroy();
       // }
      }
      
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Draw</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    //Draw Dark Overlay:
    draw_sprite_ext(spr_dot,-1,view_xview,view_yview,512,288,0,c_black,0.8);

    //Prepare text
    draw_set_font(global.fnt_abc_main);
    draw_set_color(c_white);

    
    //Draw text
    draw_text(view_xview+62,view_yview+42,"SELECT YOUR CHARACTERS")
    draw_text(view_xview+80,view_yview+72,"CHAR")
    draw_text(view_xview+195,view_yview+72,"SQUAD")
   
    // Draw character icon
    draw_sprite(spr_data_char,char_main,view_xview+80,view_yview+98)
    draw_sprite(spr_data_char,char_cpu,view_xview+194,view_yview+98)
   
    // Draw red arrows
    if option == 1 //we are selecting our Main character
    draw_sprite(spr_data_arrow, arrow_index, view_xview+234-24, view_yview+84); //draw the red arrows
    if option == 0 //if we are  selecting our CPU characer
    draw_sprite(spr_data_arrow, arrow_index, view_xview+70+24, view_yview+84); //draw the red arrows


    // Draw error message, if needed (see Step Event)
    if display_error
    draw_text(view_xview+40,view_yview+208,"CHARACTERS CANNOT BE THE SAME")
    


    
    

    
//this sets the red arrows animation speed
arrow_index += 0.1
if arrow_index &gt; 2
{
arrow_index = 0
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="83">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Cancel</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>   //Cancel/Go Back 

      //if selecting CPU, go back to selecting Main
      if (allow_input &amp;&amp; option == 1)
      {
      allow_input = false;
      alarm[0] = 2;
      option = 0;
      }
      
      //if selecting Main, go back to main data select menu
      if (allow_input &amp;&amp; option == 0)
      {
      instance_destroy();
      }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Cycle Down Through Characters</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Change the selected character
if !allow_input exit;

if option == 1 //we are selecting our main character
{

    if char_main &gt; 1 //if we are at none(the last option), start the cycle over
    {
        char_main -= 1;
    }
    else       //otherwise, cycle through the character
    {
        char_main = 3;
    }


}



if option == 1 //we are selecting our cpu character
{
    if char_cpu &gt; 1 //if we are at Knuckles (the last option), start the cycle over
    {
        char_cpu -= 1;
    }
    else       //otherwise, cycle through the char_cpuacter
    {
        char_cpu = 3;
    }

 

}


audio_play_sound(snd_object_switch,1,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Cycle Up Through Characters</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Change the selected character
if !allow_input exit;


if option == 1 //we are selecting our main character
{

    if char_main &lt; 3 //if we are at Knuckles (the last option), start the cycle over
    {
        char_main += 1;
    }
    else       //otherwise, cycle through the char_mainacter
    {
        char_main = 1;
    }


}



if option == 1 //we are selecting our cpu character
{
    if char_cpu &lt; 3 //if we are at Knuckles (the last option), start the cycle over
    {
        char_cpu += 1;
    }
    else       //otherwise, cycle through the char_cpuacter
    {
        char_cpu = 1;
    }

 

}


audio_play_sound(snd_object_switch,1,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
