<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables.
  
    SetupProcess    = 1; // Checks the process step.
    SetupMDirection = 1; // Menu Direction (1 = Left/Right, 2 = Up/Down)
    SetupMID        = 1; // Menu Option ID.
    SetupMID_Max    = 2; // How many Menu options we have.
    SetupCanEnter   = 0; // Checks if we can enter/choose a selection.
    SetupKeyboard   = 0; // Checks if we're setting up our keyboard.
    SetupGamepad    = 0; // Checks if we're setting up our gamepad.    
    SetupKeyID      = 0; 
    SetupGPadID     = 0;        
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change Menu Option.
 
    if(!SetupKeyboard &amp;&amp; !SetupGamepad){
    
    if(SetupMDirection == 1){
       if(keyboard_check_pressed(global.Key_LEFT)){
          if(SetupMID != 1){
             SetupMID --
          }else{
             SetupMID = SetupMID_Max
          }
          PlaySound(snd_object_switch, global.MaxSFXV, 1, 1)
       }
       if(keyboard_check_pressed(global.Key_RIGHT)){
          if(SetupMID != SetupMID_Max){
             SetupMID ++
          }else{
             SetupMID = 1
          }
          PlaySound(snd_object_switch, global.MaxSFXV, 1, 1)
       }            
    }
    
    if(SetupMDirection == 2){
       if(keyboard_check_pressed(global.Key_UP)){
          if(SetupMID != 1){
             SetupMID --
          }else{
             SetupMID = SetupMID_Max
          }
          PlaySound(snd_object_switch, global.MaxSFXV, 1, 1)
       }
       if(keyboard_check_pressed(global.Key_DOWN)){
          if(SetupMID != SetupMID_Max){
             SetupMID ++
          }else{
             SetupMID = 1
          }
          PlaySound(snd_object_switch, global.MaxSFXV, 1, 1)          
       }       
    }    
    
    }
    
    // Sounds in the input menu:
    if(SetupKeyboard){
       if(keyboard_check_pressed(vk_anykey)){
          PlaySound(snd_object_switch, global.MaxSFXV, 1, 1)
       }
    }
    if(SetupGamepad){
       if(gamepad_get_button_pressed(global.Controller_Input_Found)){
          PlaySound(snd_object_switch, global.MaxSFXV, 1, 1)
       }
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Proceed to next step.
 
    // Make sure we can select something:
       if(SetupCanEnter != 1){
          SetupCanEnter += 0.25;
       }
    
    if(SetupProcess == 1){
       if(keyboard_check_pressed(global.Key_ENTER) &amp;&amp; SetupCanEnter){
          switch(SetupMID){
                 case 1:{
                 SetupProcess    = 2;
                 SetupMDirection = 2;
                 SetupMID_Max    = 3;
                 SetupMID        = 1;
                 SetupCanEnter   = 0;
                 break;    
                 }
                 case 2:{
                 SetupProcess    = 4;
                 SetupMDirection = 2;
                 SetupMID_Max    = 8;
                 SetupMID        = 1;
                 SetupCanEnter   = 0;                                
                 break;
                 }
          }
       }
    }
    
    if(SetupProcess == 2){
       if(keyboard_check_pressed(global.Key_ENTER) &amp;&amp; SetupCanEnter){
          switch(SetupMID){
                 case 1:{
                 if(SetupKeyboard != 1){
                    SetupCanEnter  = 0;                 
                    SetupKeyboard  = 1;
                 }
                 break;    
                 }
                 case 2:{
                 if(SetupGamepad != 1 &amp;&amp; global.Controller_Input_Found != -1){
                    SetupCanEnter = 0;                  
                    SetupGamepad  = 1;
                 }else{
                    PlaySound(snd_object_error, global.SFXVolume, 1, 1);
                 }              
                 break;
                 }
                 case 3:{
                 SetupProcess    = 3;
                 SetupMDirection = 2;
                 SetupMID_Max    = 3;
                 SetupMID        = 1;
                 SetupCanEnter   = 0;                           
                 break;
                 }                 
          }
       }
    }   
        
    if(SetupProcess == 3 &amp;&amp; SetupCanEnter){
       if(SetupMID == 1 &amp;&amp; keyboard_check(global.Key_LEFT)){
          if(global.MaxBGMV &gt; 0.00){
             global.MaxBGMV -= 0.01;
             global.BGMVolume = global.MaxBGMV;
          }
       }
       if(SetupMID == 1 &amp;&amp; keyboard_check(global.Key_RIGHT)){
          if(global.MaxBGMV &lt; 1.0){
             global.MaxBGMV += 0.01;
             global.BGMVolume = global.MaxBGMV;
          }
       }  
       if(SetupMID == 2 &amp;&amp; keyboard_check(global.Key_LEFT)){
          if(global.MaxSFXV &gt; 0.00){
             global.MaxSFXV -= 0.01;
             global.SFXVolume = global.MaxSFXV;
          }
       }
       if(SetupMID == 2 &amp;&amp; keyboard_check(global.Key_RIGHT)){
          if(global.MaxSFXV &lt; 1.0){
             global.MaxSFXV += 0.01;
             global.SFXVolume = global.MaxSFXV;
          }
       }   
       if(global.MaxBGMV &lt; 0.01){
          global.MaxBGMV = 0.00;
          global.BGMVolume = global.MaxBGMV;          
       }
       if(global.MaxBGMV &gt; 1.0){
          global.MaxBGMV = 1.0;
          global.BGMVolume = global.MaxBGMV;          
       }  
       if(global.MaxSFXV &lt; 0.01){
          global.MaxSFXV = 0.00;
          global.SFXVolume = global.MaxSFXV;          
       }
       if(global.MaxSFXV &gt; 1.0){
          global.MaxSFXV = 1.0;
          global.SFXVolume = global.MaxSFXV;          
       }  
       if(SetupMID == 3 &amp;&amp; keyboard_check(global.Key_ENTER)){
          Flicky_SaveConfiguration()
          SetupProcess    = 4;
          SetupMDirection = 2;
          SetupMID_Max    = 8;
          SetupMID        = 1;
          SetupCanEnter   = 0;            
       }                         
    }
    
    if(SetupProcess == 4){
       if(keyboard_check_pressed(global.Key_ENTER) &amp;&amp; SetupCanEnter){
          switch(SetupMID){
                 case 1:{
                 global.Character_1 = CharacterSonic;
                 room_goto_next(); 
                 break;    
                 }
                 case 2:{
                 global.Character_1 = CharacterTails;
                 room_goto_next();             
                 break;
                 }
                 case 3:{                 
                 global.Character_1 = CharacterKnuckles;
                 room_goto_next();                                 
                 break;
                 }   
                 case 4:{
                 global.Character_1 = CharacterAmy;
                 room_goto_next();                                 
                 break;
                 }      
                 case 5:{
                 global.Character_1 = CharacterShadow;
                 room_goto_next();                                 
                 break;
                 }     
                 case 6:{
                 global.Character_1 = CharacterMetal;
                 room_goto_next();                                 
                 break;
                 }             
                 case 7:{
                 global.Character_1 = CharacterModern;
                 room_goto_next();                                 
                 break;
                 }        
                 case 8:{
                 global.Character_1 = CharacterMighty;
                 room_goto_next();                                 
                 break;
                 }
          }
       }
    }  

    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw each setup &amp; setup input.
 var off;
 off = 50;
    // Welcome Setup:
       if(SetupProcess == 1){
          draw_set_color(c_white)
          draw_set_halign(fa_center)
          draw_set_font(global.Font_Letters)
          
          // Ask for Setupe:
          draw_text(320/2, 32+off, "DO YOU WANT TO SET UP THE ENGINE?")
          
          // Menu Options:
          if(SetupMID == 1){
             draw_set_color(c_yellow)
          }else{
             draw_set_color(c_white)
          }  draw_text(320/2-64, 224/2+off, "YES")
          
          if(SetupMID == 2){
             draw_set_color(c_yellow)
          }else{
             draw_set_color(c_white)
          }  draw_text(320/2+64, 224/2+off, "NO")
          
          draw_set_color(c_white) 
          draw_set_halign(-1)
       }

    // Keyboard/Gamepad Setup:
       if(SetupProcess == 2){
          draw_set_color(c_white)
          draw_set_halign(fa_center)
          draw_set_font(global.Font_Letters)
          
          if(!SetupKeyboard &amp;&amp; !SetupGamepad){
             // Ask for Input settings:
             draw_text(320/2, 32+off, "CHANGE YOUR#KEYBOARD AND GAMEPAD SETTINGS!")
          
             // Menu Options:
             if(SetupMID == 1){
                draw_set_color(c_yellow)
             }else{
                draw_set_color(c_white)
             }  draw_text(320/2, 224/2+off, "KEYBOARD")
          
             if(SetupMID == 2){
                if(global.Controller_Input_Found != -1){
                   draw_set_color(c_yellow)
                }else{
                   draw_set_color(c_red)
                }
             }else{
                draw_set_color(c_white)
             }  draw_text(320/2, 224/2 + 32+off, "GAMEPAD")
                                        
             if(SetupMID == 3){
                draw_set_color(c_yellow)
             }else{
                draw_set_color(c_white)
             }  draw_text(320/2, 224/2 + 64+off, "CONTINUE")
          
             draw_set_color(c_white) 
             draw_set_halign(-1)
          }
          
          // Keyboard:
          if(SetupKeyboard){
          
             switch(SetupKeyID){
                    case 0:{
                    draw_text(320/2, 32+off, "CHANGE YOUR#KEYBOARD AND GAMEPAD SETTINGS!")  
                    draw_text(320/2, 224/2+off, "PRESS ANY KEY#FOR ( UP )")    

                    if(keyboard_check_pressed(vk_anykey) &amp;&amp; SetupCanEnter == 1){
                       global.Key_UP = keyboard_key;
                       SetupCanEnter = 0;
                       SetupKeyID++
                    }
                                            
                    break;
                    }
                    
                    case 1:{
                    draw_text(320/2, 32+off, "CHANGE YOUR#KEYBOARD AND GAMEPAD SETTINGS!")  
                    draw_text(320/2, 224/2+off, "PRESS ANY KEY#FOR ( DOWN )")    

                    if(keyboard_check_pressed(vk_anykey) &amp;&amp; SetupCanEnter == 1){
                       global.Key_DOWN = keyboard_key;
                       SetupCanEnter = 0;
                       SetupKeyID++
                    }
                                            
                    break;
                    }
                    
                    case 2:{
                    draw_text(320/2, 32+off, "CHANGE YOUR#KEYBOARD AND GAMEPAD SETTINGS!")  
                    draw_text(320/2, 224/2+off, "PRESS ANY KEY#FOR ( LEFT )")    

                    if(keyboard_check_pressed(vk_anykey) &amp;&amp; SetupCanEnter == 1){
                       global.Key_LEFT = keyboard_key;
                       SetupCanEnter = 0;
                       SetupKeyID++
                    }
                                            
                    break;
                    }
                    
                    case 3:{
                    draw_text(320/2, 32+off, "CHANGE YOUR#KEYBOARD AND GAMEPAD SETTINGS!")  
                    draw_text(320/2, 224/2+off, "PRESS ANY KEY#FOR ( RIGHT )")    

                    if(keyboard_check_pressed(vk_anykey) &amp;&amp; SetupCanEnter == 1){
                       global.Key_RIGHT = keyboard_key;
                       SetupCanEnter = 0;
                       SetupKeyID++
                    }
                                            
                    break;
                    }                    
                    
                    case 4:{
                    draw_text(320/2, 32+off, "CHANGE YOUR#KEYBOARD AND GAMEPAD SETTINGS!")  
                    draw_text(320/2, 224/2+off, "PRESS ANY KEY#FOR ( ACTION )")    

                    if(keyboard_check_pressed(vk_anykey) &amp;&amp; SetupCanEnter == 1){
                       global.Key_ACTION = keyboard_key;
                       SetupCanEnter = 0;
                       SetupKeyID++
                    }
                                            
                    break;
                    }
                    
                    case 5:{
                    draw_text(320/2, 32+off, "CHANGE YOUR#KEYBOARD AND GAMEPAD SETTINGS!")  
                    draw_text(320/2, 224/2+off, "PRESS ANY KEY#FOR ( SPECIAL )")    

                    if(keyboard_check_pressed(vk_anykey) &amp;&amp; SetupCanEnter == 1){
                       global.Key_SPECIAL = keyboard_key;
                       SetupCanEnter = 0;
                       SetupKeyID++
                    }
                                            
                    break;
                    }                                       
                    
                    case 6:{
                    draw_text(320/2, 32+off, "CHANGE YOUR#KEYBOARD AND GAMEPAD SETTINGS!")  
                    draw_text(320/2, 224/2+off, "PRESS ANY KEY#FOR ( ENTER )")    

                    if(keyboard_check_pressed(vk_anykey) &amp;&amp; SetupCanEnter == 1){
                       global.Key_ENTER = keyboard_key;
                       SetupCanEnter = 0;
                       SetupKeyID++
                    }
                                            
                    break;
                    }
                    
                    case 7:{
                    SetupKeyID    = 0;
                    SetupKeyboard = 0;  
                                  
                    break;
                    }
                                                                                
             }
             
          }
          
          // Gamepad:
          if(SetupGamepad){
          
             switch(SetupGPadID){
                    case 0:{
                    draw_text(320/2, 32+off, "CHANGE YOUR#KEYBOARD AND GAMEPAD SETTINGS!")  
                    draw_text(320/2, 224/2+off, "PRESS ANY KEY#FOR ( UP )")    
                    
                    var _i;
                        _i = gamepad_get_button_pressed(global.Controller_Input_Found)
                    if(_i != 0 &amp;&amp; SetupCanEnter == 1){
                       global.Controller_Up = _i;
                       _i = 0;                       
                       SetupCanEnter = 0;
                       SetupGPadID++
                    }
                                            
                    break;
                    }
                    
                    case 1:{
                    draw_text(320/2, 32+off, "CHANGE YOUR#KEYBOARD AND GAMEPAD SETTINGS!")  
                    draw_text(320/2, 224/2+off, "PRESS ANY KEY#FOR ( DOWN )")    
                    
                    var _i;
                        _i = gamepad_get_button_pressed(global.Controller_Input_Found)
                    if(_i != 0 &amp;&amp; SetupCanEnter == 1){
                       global.Controller_Down = _i;
                       _i = 0;                       
                       SetupCanEnter = 0;
                       SetupGPadID++
                    }
                                           
                    break;
                    }
                    
                    case 2:{
                    draw_text(320/2, 32+off, "CHANGE YOUR#KEYBOARD AND GAMEPAD SETTINGS!")  
                    draw_text(320/2, 224/2+off, "PRESS ANY KEY#FOR ( LEFT )")    
                    
                    var _i;
                        _i = gamepad_get_button_pressed(global.Controller_Input_Found)
                    if(_i != 0 &amp;&amp; SetupCanEnter == 1){
                       global.Controller_Left = _i;
                       _i = 0;                       
                       SetupCanEnter = 0;
                       SetupGPadID++
                    }
                                             
                    break;
                    }
                    
                    case 3:{
                    draw_text(320/2, 32+off, "CHANGE YOUR#KEYBOARD AND GAMEPAD SETTINGS!")  
                    draw_text(320/2, 224/2+off, "PRESS ANY KEY#FOR ( RIGHT )")    
                    
                    var _i;
                        _i = gamepad_get_button_pressed(global.Controller_Input_Found)
                    if(_i != 0 &amp;&amp; SetupCanEnter == 1){
                       global.Controller_Right = _i;
                       _i = 0;                       
                       SetupCanEnter = 0;
                       SetupGPadID++
                    }
                                             
                    break;
                    }                    
                    
                    case 4:{
                    draw_text(320/2, 32+off, "CHANGE YOUR#KEYBOARD AND GAMEPAD SETTINGS!")  
                    draw_text(320/2, 224/2+off, "PRESS ANY KEY#FOR ( ACTION )")    
                    
                    var _i;
                        _i = gamepad_get_button_pressed(global.Controller_Input_Found)
                    if(_i != 0 &amp;&amp; SetupCanEnter == 1){
                       global.Controller_Action = _i;
                       _i = 0;                       
                       SetupCanEnter = 0;
                       SetupGPadID++
                    }
                                             
                    break;
                    }
                    
                    case 5:{
                    draw_text(320/2, 32+off, "CHANGE YOUR#KEYBOARD AND GAMEPAD SETTINGS!")  
                    draw_text(320/2, 224/2+off, "PRESS ANY KEY#FOR ( SPECIAL )")    
                    
                    var _i;
                        _i = gamepad_get_button_pressed(global.Controller_Input_Found)
                    if(_i != 0 &amp;&amp; SetupCanEnter == 1){
                       global.Controller_Special = _i;
                       _i = 0;                       
                       SetupCanEnter = 0;
                       SetupGPadID++
                    }
                                            
                    break;
                    }                                       
                    
                    case 6:{
                    draw_text(320/2, 32+off, "CHANGE YOUR#KEYBOARD AND GAMEPAD SETTINGS!")  
                    draw_text(320/2, 224/2+off, "PRESS ANY KEY#FOR ( ENTER )")    
                    
                    var _i;
                        _i = gamepad_get_button_pressed(global.Controller_Input_Found)
                    if(_i != 0 &amp;&amp; SetupCanEnter == 1){
                       global.Controller_Enter = _i;
                       _i = 0;                       
                       SetupCanEnter = 0;
                       SetupGPadID++
                    }
                                           
                    break;
                    }
                    
                    case 7:{                  
                    SetupGPadID  = 0;    
                    SetupGamepad = 0;
                                                      
                    break;
                    }
                                                                                
             }
             
          }
                    
       }
       
     // Volume Setup:
       if(SetupProcess == 3){
          draw_set_color(c_white)
          draw_set_halign(fa_center)
          draw_set_font(global.Font_Letters)
          
             // Ask for character.
             draw_text(320/2, 32+off, "CHANGE THE VOLUMES?")
          
             // Menu Options:
             if(SetupMID == 1){
                draw_set_color(c_yellow)
             }else{
                draw_set_color(c_white)
             }  draw_text(320/2, 224/2+off, "BACKGROUND MUSIC "+string( max(floor(global.MaxBGMV*100),min(0))) + "%");
          
             if(SetupMID == 2){
                draw_set_color(c_yellow)
             }else{
                draw_set_color(c_white)
             }  draw_text(320/2, 224/2+32+off, "SOUND EFFECTS "+string( max(floor(global.MaxSFXV*100),min(0))) + "%");
             
             if(SetupMID == 3){
                draw_set_color(c_yellow)
             }else{
                draw_set_color(c_white)
             }  draw_text(320/2, 224/2+64+off, "CONTINUE")
                       
             draw_set_color(c_white) 
             draw_set_halign(-1)

       }       

     // Character Setup:
       if(SetupProcess == 4){
          draw_set_color(c_white)
          draw_set_halign(fa_center)
          draw_set_font(global.Font_Letters)
          
             // Ask for character.
             draw_text(320/2, 32+off, "WHICH CHARACTER WOULD#YOU LIKE TO USE?")
          
             // Menu Options:
             if(SetupMID == 1){
                draw_set_color(c_blue)
             }else{
                draw_set_color(c_white)
             }  draw_text(320/2, 224/2-24+off, "SONIC THE HEDGEHOG")
          
             if(SetupMID == 2){
                draw_set_color(c_yellow)
             }else{
                draw_set_color(c_white)
             }  draw_text(320/2, 224/2-16+off, "MILES TAILS PROWER")
             
             if(SetupMID == 3){
                draw_set_color(c_red)
             }else{
                draw_set_color(c_white)
             }  draw_text(320/2, 224/2-8+off, "KNUCKLES THE ECHIDNA")
                                                     
             if(SetupMID == 4){
                draw_set_color(c_purple)
             }else{
                draw_set_color(c_white)
             }  draw_text(320/2, 224/2+off, "AMY ROSE")
             
             if(SetupMID == 5){
                draw_set_color(c_red)
             }else{
                draw_set_color(c_white)
             }  draw_text(320/2, 224/2 +8+off, "SHADOW THE HEDGEHOG")       
             if(SetupMID == 6){
                draw_set_color(c_blue)
             }else{
                draw_set_color(c_white)
             }  draw_text(320/2, 224/2 +16+off, "METAL")  
             if(SetupMID == 7){
                draw_set_color(c_blue)
             }else{
                draw_set_color(c_white)
             }  draw_text(320/2, 224/2 +24+off, "SONIC MODERN")  
             if(SetupMID == 8){
                draw_set_color(c_red)
             }else{
                draw_set_color(c_white)
             }  draw_text(320/2, 224/2 +32+off, "MIGHTY")        
          
             draw_set_color(c_white) 
             draw_set_halign(-1)

       }       


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
