<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>9999999</depth>
  <persistent>0</persistent>
  <parentName>obj_control</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>  // Setup 3D    
  cloudTexY = 0;
  lpY = 0;
  lpYDir = 0;
    
  draw3D = false;
  drawBG = true;    
  drawTM = true
  drawLP = true;
  animateWater = false;
    
  cloudTex = sprite_get_texture(sprCloudTexture, 0);
    
  var x1,x2,y1,y2;
  
  x2=sprite_xoffset
  y2=sprite_yoffset+sprite_height  
  x1=x2+lengthdir_x(sprite_height,view_current)
  y1=y2+lengthdir_y(sprite_height,90)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Move Cloud Texture
    cloudTexY += 0.001;
    if(cloudTexY &gt; 0.5)
        cloudTexY -= 0.5;
                
    
    // Draw clouds delayed.
        draw3D = true;
     


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Draw Clouds
    if(draw3D){
    
        // Set up 3D Perspectve
    d3d_set_projection_ext(0, 0, 0, 0, 0, 2000, 0, -1, 0, 45, 256/224, 1, 2000);       
    d3d_set_perspective(true);
    draw_set_color(c_white);
    d3d_set_hidden(false);

    // Draw 2 polygons to render a quad.
    d3d_primitive_begin_texture(pr_trianglelist, cloudTex);

    d3d_vertex_texture(-1000, -100, 0, 0, cloudTexY);
    d3d_vertex_texture(1000, -100, 0, 1, cloudTexY);
    d3d_vertex_texture(1000, -100, 1600, 1, 0.5+cloudTexY);

    d3d_vertex_texture(-1000, -100, 0, 0, cloudTexY);
    d3d_vertex_texture(-1000, -100, 1600, 0, 0.5+cloudTexY);
    d3d_vertex_texture(1000, -100, 1600, 1, 0.5+cloudTexY);
    
    d3d_primitive_end();
    d3d_set_hidden(true);

    // Set projection back to 2D
    d3d_set_projection_ortho(view_xview+0, view_yview+0, 512, 288, 0);    
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
