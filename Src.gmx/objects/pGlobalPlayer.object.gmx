<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_control</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tracking_name = "";
acti=0;
invi=0;
p=0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shortcut keys
if !gms_chat_istyping()
{

//Chat Toggle On
if keyboard_check_pressed((ord("1"))){
gms_chat_toggle(true)
global.chat = true
}


//Chat Toggle Off
if keyboard_check_pressed((ord("2"))){
gms_chat_toggle(false)
global.chat = false
}


//Display Names
if keyboard_check_pressed((ord("6"))){
if global.show_names==false{
global.show_names=true;exit;}else{
global.show_names=false;exit;
}
}


//Character
if keyboard_check_pressed((ord("4"))){
global.Character_1 = get_integer("Insert character number.",global.main_player.CharacterID);
global.main_player.CharacterID = global.Character_1;
}

//Character
if keyboard_check_pressed((ord("5"))){
global.skin = get_integer("Insert skin number.",global.skin)
}

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sync Variables
//gms_self_set("",)


///Sprites
gms_self_set("AnimationSprite",AnimationSprite)
gms_self_set("AnimationFrame",AnimationFrame)
gms_self_set("xx",x)
gms_self_set("yy",y)
gms_self_set("AnimationOffsetX",AnimationOffsetX)
gms_self_set("AnimationOffsetY",AnimationOffsetY)
gms_self_set("AnimationDirection",AnimationDirection)
gms_self_set("AnimationAngle",AnimationAngle)
gms_self_set("Alpha",Alpha)
gms_self_set("cur_rm",room)

//PVP
//gms_self_set('Action', Action)
//gms_self_set('Invincibility', Invincibility)
gms_self_set('pvp', global.pvp)
//gms_self_set("YSpeed",YSpeed)
//gms_self_set("ShieldAttack",ShieldAttack)
//gms_self_set("Shield",Shield)
//gms_self_set("HomingUsed",HomingUsed)
//gms_self_set("AmyHammerAttack",AmyHammerAttack)
//gms_self_set("Animation",Animation)
//gms_self_set("CharacterID",CharacterID)
//gms_self_set("CharacterState",CharacterState)
//gms_self_set("AmyRollJump",AmyRollJump)
//Misc
gms_self_set('ping', gms_info_ping())
//gms_self_set('typing', gms_chat_istyping())
gms_self_set('version', GameVersion)

//gms_self_set('status', global.status)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Other
if global.tracking != noone{
if !instance_exists(global.tracking){
event_user(0)
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_other_player_mask">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.pvp == false
{exit;}

/*

/// PVP temporarely deactivated.
var otherplayer;
otherplayer = other.player;
with otherplayer{
pGlobalPlayer.acti=gms_other_get(player_id, "Action")
pGlobalPlayer.invi=gms_other_get(player_id, "Invincibility")
pGlobalPlayer.p=gms_other_get(player_id, "pvp")
pGlobalPlayer.oYSpeed = gms_other_get(player_id, "YSpeed")
pGlobalPlayer.oShieldAttack = gms_other_get(player_id, "ShieldAttack")
pGlobalPlayer.oShield = gms_other_get(player_id, "Shield")
pGlobalPlayer.oHomingUsed = gms_other_get(player_id, "HomingUsed")
pGlobalPlayer.oAmyHammerAttack = gms_other_get(player_id, "AmyHammerAttack")
pGlobalPlayer.oAnimation = gms_other_get(player_id, "AmyHammerAttack")
pGlobalPlayer.oCharacterID= gms_other_get(player_id, "CharacterID")
pGlobalPlayer.oCharacterState= gms_other_get(player_id, "CharacterState")
pGlobalPlayer.oAmyRollJump= gms_other_get(player_id, "AmyRollJump")
}

if p==false
{exit;}



 if((acti = ActionJump &amp;&amp; oCharacterID != CharacterAmy) || (acti = ActionJump &amp;&amp; oCharacterID == CharacterAmy &amp;&amp; oAmyRollJump = true) || acti = ActionRolling || (acti = ActionSpindash &amp;&amp; oCharacterID != CharacterAmy) || (invi &gt; 1 &amp;&amp; oYSpeed &gt; 0.0)
       ||(oCharacterState != CharacterNormal) || (oShield != ShieldDefault &amp;&amp; oShieldAttack) || oAnimation = "ROLL" || oHomingUsed == true || acti = ActionGlide || acti = ActionSlide || oAmyHammerAttack != 0 ) 
       or (acti == ActionFly &amp;&amp; oYSpeed &lt; 0)
     { 
     
     /*
     if (action = ConActShield || action == ConActJump || action == ConActRoll || action == ConActSpindash || action == ConActHoming || action == ConActGlide || action == ConActGlideSlide || action == ConActCorkscrewRoll || invincibility == 1 || invincibility == 3 || action == ConActSliding)
{
 angle_to_bumper = degtorad(round(scr_wrap_angle(point_direction(x, y, other.x, other.y)-90)/22.5)*24);
  speed_x = sin(scr_wrap_angle(angle_to_bumper-global.gravity_angle))*8;
  speed_y = cos(scr_wrap_angle(angle_to_bumper-global.gravity_angle))*8;     
    ground = false; 
    sound_play(snd_sfx_bumper)
  exit;
}
     scr_player_hurt()
     }*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//show_message(string(gms_self_name())+" - Status Report:#"+"PVP -"+string(scr_return_on(global.pvp)))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.tracking != noone{

with global.tracking{
pGlobalPlayer.tracking_name = gms_other_get(player_id,"name")
}
gms_chat(" stopped tracking "+string(tracking_name),c_red)
global.tracking = noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.show_names==true
{draw_set_color(c_white);
draw_set_font(global.Font_Letters);
draw_set_halign(fa_center)
var pvssp;
pvssp = scr_return_on(global.pvp);
//draw_text(floor(x),floor(y)-54,string(gms_self_name())+", PVP:"+string(pvssp))}

//draw_self()
//draw_set_font(font0)

yoff = 16;
draw_set_font(global.Font_Chat)
draw_set_halign(fa_left)

name = string(gms_self_name());

var w = string_width(name)
var h = string_height(name)

draw_set_alpha(0.5)
draw_set_color(c_black)
draw_rectangle(x - w / 2 - 4, bbox_top - h - 10-yoff, x + w / 2 + 4, bbox_top - 2-yoff, false)

draw_set_alpha(1)
draw_set_color(c_white)
draw_text(x - w / 2, bbox_top - h - 6-yoff, name)
draw_set_halign(fa_left)
draw_set_font(global.Font_Letters);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.tracking == noone or global.tracking == 0{exit;}

if global.tracking != 0{
if room!=global.tracking.current_room{
room_goto(global.tracking.current_room)
}
x = global.tracking.nx;
y = global.tracking.ny;
obj_camera.x = global.tracking.nx;
obj_camera.y = global.tracking.ny;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
