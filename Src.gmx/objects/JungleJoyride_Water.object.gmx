<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_editor_noicon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>99999999</depth>
  <persistent>0</persistent>
  <parentName>objParallaxParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//The Background System can be used to mimic complex parallax from the
//Genesis games.

/*    parallaxAdd(RepeatedOver, Background, XFactor, XSpeed, XScroll, XOffset, XSeparation, 
                    YFactor, YSpeed, YScroll, YOffset, YSeparation, Left, Top, Width, Height)*/
                    
    var OverallYOffset; OverallYOffset = 0.82;

    WaterReflectionScanlines = 28;
    CurrentScanline     = 0;
    NumberOfScanlines   = 0;
    ScanlineStep        = 0;

    //Water
    NumberOfScanlines   = WaterReflectionScanlines;
    ScanlineStep        = 18/WaterReflectionScanlines; //
    for (i=0; i&lt;NumberOfScanlines; i+=1) {
        scrParallaxAddNode(1, JungleJoyride_BG2,   0.96, 0, 0, 0, 0,    OverallYOffset, 0, 0, 256+floor(i*ScanlineStep), 0,    0, 0+floor(i*ScanlineStep), 512, ceil(ScanlineStep));
    }

    /*
    //Water
    NumberOfScanlines   = WaterReflectionScanlines;
    ScanlineStep        = 41/WaterReflectionScanlines ;
    for (i=0; i&lt;NumberOfScanlines; i+=1) {
        //scrParallaxAddNode(1, backAlz,   0.74, 0, 0, 0, 0,    OverallYOffset, 0, 0, 135+floor(i*ScanlineStep), 0,    0, 135+floor(i*ScanlineStep), 256, ceil(ScanlineStep));
        scrParallaxAddNode(1, JungleJoyride_BG2,   0.92, 0, 0, 0, 0,    OverallYOffset, 0, 0, 266+floor(i*ScanlineStep)-9, 0,    0, 0+floor(i*ScanlineStep), 512, ceil(ScanlineStep));

    }*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    // Water reflection ripples
    for (i=0; i&lt;WaterReflectionScanlines-1; i+= 1) {
        ds_grid_set(ParallaxNodes, constParallaxXScroll, 6+i, cos(global.handle_object_timer/220+i*0.87)*3);
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
