<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-99999</depth>
  <persistent>0</persistent>
  <parentName>par_controller</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Rectangles.
    with(all){
    
         if(!(object_get_parent(object_index) == par_collision_solid or object_get_parent(object_index) == par_collision_platform)){      
         
         draw_set_alpha(0.5)
         if(object_get_name(object_index) == "par_character"){
            if(Layer == 0){
               draw_set_color(c_red)
            }else{
               draw_set_color(c_blue)
            }
         }else{         
         draw_set_color(c_maroon)
         }
         if(sprite_get_xoffset(sprite_index) == 0 &amp;&amp; sprite_get_yoffset(sprite_index) == 0){
            draw_rectangle(x - 2, y - 2, x + sprite_get_width(sprite_index) + 2, y + sprite_get_height(sprite_index) + 2, true)
         }else{
            draw_rectangle(x - sprite_get_xoffset(sprite_index) - 2, y - sprite_get_yoffset(sprite_index) - 2, x + sprite_get_width(sprite_index)/2 + 1, y + sprite_get_height(sprite_index)/2 + 1, true)
         }
         if(visible == false){
            image_alpha = 0.25
            visible = true;
         }

         draw_set_color(c_white)   
         draw_set_alpha(1)    
         
         }
         
    }        

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>I = find("obj_zne_test_collapse", false)
if(I == -1){
   show_message("Fail")
}else{
   instance_create(par_character.x+60, par_character.y-60, I);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
